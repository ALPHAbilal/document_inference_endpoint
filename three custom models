from fastapi import FastAPI, File, UploadFile, HTTPException, Form
from azure.ai.formrecognizer import DocumentAnalysisClient
from azure.core.credentials import AzureKeyCredential
from azure.core.exceptions import ResourceNotFoundError
import os
from dotenv import load_dotenv

app = FastAPI()

# Load environment variables
load_dotenv("config.env")

# Initialize Azure Document Intelligence client
endpoint = os.getenv("AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT")
key = os.getenv("AZURE_DOCUMENT_INTELLIGENCE_KEY")

document_analysis_client = DocumentAnalysisClient(
    endpoint=endpoint, credential=AzureKeyCredential(key)
)

@app.post("/analyze_document")
async def analyze_document(file: UploadFile = File(...)):
    try:
        contents = await file.read()
        
        # Use the compose model
        model_id = "FatherModel"  # Your compose model ID

        # Analyze the document using the compose model
        poller = document_analysis_client.begin_analyze_document(
            model_id=model_id, document=contents
        )
        result = poller.result()

        # Process and return the results
        analyzed_document = {
            "documents": [
                {
                    "fields": {
                        name: {
                            "value": field.value,
                            "confidence": field.confidence
                        } for name, field in doc.fields.items()
                    }
                } for doc in result.documents
            ],
            "pages": [
                {
                    "page_number": page.page_number,
                    "lines": [
                        {
                            "content": line.content,
                            "bounding_box": line.polygon,
                            "words": [
                                {
                                    "content": word.content,
                                    "confidence": word.confidence,
                                    "bounding_box": word.polygon
                                } for word in line.get_words()
                            ]
                        } for line in page.lines
                    ],
                }
                for page in result.pages
            ],
            "tables": [
                {
                    "row_count": table.row_count,
                    "column_count": table.column_count,
                    "cells": [
                        {
                            "row_index": cell.row_index,
                            "column_index": cell.column_index,
                            "text": cell.content,
                            "bounding_box": cell.bounding_regions[0].polygon if cell.bounding_regions else None
                        }
                        for cell in table.cells
                    ],
                }
                for table in result.tables
            ],
        }

        return analyzed_document

    except ResourceNotFoundError:
        raise HTTPException(status_code=404, detail=f"Model '{model_id}' not found")
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
